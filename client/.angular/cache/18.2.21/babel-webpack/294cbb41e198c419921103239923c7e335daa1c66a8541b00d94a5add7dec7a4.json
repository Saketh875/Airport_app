{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport let IssueService = /*#__PURE__*/(() => {\n  class IssueService {\n    constructor(http, auth) {\n      this.http = http;\n      this.auth = auth;\n      this.base = '/api/issues';\n    }\n    getHeaders() {\n      const token = this.auth.token || localStorage.getItem('token');\n      return token ? new HttpHeaders().set('Authorization', `Bearer ${token}`) : new HttpHeaders();\n    }\n    list(params) {\n      return this.http.get(this.base, {\n        params,\n        headers: this.getHeaders()\n      });\n    }\n    report(body) {\n      return this.http.post(`${this.base}/report`, body, {\n        headers: this.getHeaders()\n      });\n    }\n    take(id) {\n      return this.http.post(`${this.base}/${id}/take`, {}, {\n        headers: this.getHeaders()\n      });\n    }\n    resolve(id) {\n      return this.http.post(`${this.base}/${id}/resolve`, {}, {\n        headers: this.getHeaders()\n      });\n    }\n    sos(sector, description) {\n      return this.http.post(`${this.base}/sos`, {\n        sector,\n        description\n      }, {\n        headers: this.getHeaders()\n      });\n    }\n    static {\n      this.ɵfac = function IssueService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || IssueService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: IssueService,\n        factory: IssueService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return IssueService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}